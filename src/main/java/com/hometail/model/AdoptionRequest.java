package com.hometail.model;

import jakarta.persistence.*;
import lombok.*;
import java.time.LocalDateTime;

/**
 * Represents an adoption request in the HomeTail platform.
 *
 * <p>This entity tracks the status and details of a user's request to adopt an animal.
 * Each request is associated with a specific animal and user, and includes information
 * about the request status, notes, and timestamps for tracking the request lifecycle.</p>
 *
 * <p>The entity enforces a unique constraint to prevent duplicate requests
 * from the same user for the same animal.</p>
 *
 * @see Animal
 * @see User
 * @see RequestStatus
 * @since 1.0
 */
@Entity
@Table(
        name = "adoption_request",
        uniqueConstraints = @UniqueConstraint(
                name = "uk_animal_requester",
                columnNames = {"animal_id", "requester_id"}
        )
)
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class AdoptionRequest {

    /**
     * Unique identifier for the adoption request.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The animal being requested for adoption.
     * This is a required field and cannot be null.
     */
    @ManyToOne(optional = false)
    @JoinColumn(name = "animal_id", nullable = false)
    private Animal animal;

    /**
     * The user who submitted the adoption request.
     * This is a required field and cannot be null.
     */
    @ManyToOne(optional = false)
    @JoinColumn(name = "requester_id", nullable = false)
    private User requester;

    /**
     * Additional notes or information provided by the requester.
     * This field is required and allows for large text content.
     */
    @Column(nullable = false, columnDefinition = "TEXT")
    private String note;

    /**
     * The current status of the adoption request.
     * Defaults to PENDING when a new request is created.
     *
     * @see RequestStatus
     */
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private RequestStatus status = RequestStatus.PENDING;

    /**
     * The date and time when the adoption request was created.
     * Automatically set to the current date and time when the request is created.
     */
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt = LocalDateTime.now();

    /**
     * The date and time when a decision was made on the adoption request.
     * This is automatically updated when the status changes from PENDING to any other status.
     * Will be null until a decision is made.
     */
    @Column(name = "decision_at")
    private LocalDateTime decisionAt;
}
